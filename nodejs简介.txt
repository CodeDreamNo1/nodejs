Node.js是一个Javascript运行环境(runtime)。实际上它是对Google V8引擎进行了封装，可以跑在不同系统环境下。


nodejs优势
基于事件驱动
运行速度快，依赖于Chrome V8引擎进行代码解释
异步I/O(非阻塞I/O)
轻量、可伸缩，适于实时数据交互应用
单进程，单线程



nodejs劣势
不适合CPU密集型应用； CPU密集型应用给Node带来的挑战主要是：由于JavaScript单线程的原因，如果有长时间运行的计算（比如大循环），将会导致CPU时间片不能释放，使得后续I/O无法发起；
解决方案：分解大型运算任务为多个小任务，使得运算能够适时释放，不阻塞I/O调用的发起；
只支持单核CPU，不能充分利用CPU
可靠性低，一旦代码某个环节崩溃，整个系统都崩溃 原因：单进程，单线程
解决方案：
（1）Nnigx反向代理，负载均衡，开多个进程，绑定多个端口； 
（2）开多个进程监听同一个端口，使用cluster模块；
开源组件库质量参差不齐，更新快，向下不兼容


规范：
1.CommonJS规范(服务端的amd):模块都加在完执行(同步)
2.amd:模块都加载完执行(异步)    
3.cmd:按需加载
